openapi: 3.0.0
info:
  title: Book Management API
  version: 1.0.0
  description: Simple Book Management API with Token Authentication.
  contact:
    name: Haneen
    email: haneenalaa465@gmail.com

servers:
  - url: http://localhost:5000
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  
  schemas:
    Book:
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: "The Great Gatsby"
        author:
          type: string
          example: "F. Scott Fitzgerald"
    
    Error:
      type: object
      properties:
        error:
          type: string
          example: "Unauthorized"

security:
  - bearerAuth: []

paths:
  /books:
    get:
      summary: Get all books
      description: Returns the list of all books (Requires Bearer token)
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      summary: Add a new book
      description: Add a book to the in-memory list (Requires Bearer token)
      security:
        - bearerAuth: []
      requestBody:
        description: Book object that needs to be added
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  example: "1984"
                author:
                  type: string
                  example: "George Orwell"
      responses:
        '201':
          description: The newly added book
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Title and author are required"
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
